#!/bin/sh
#
# $Id$
#
# openlldp	OpenLLDP - Open Source LLDP implimentation
#
# chkconfig:	345 55 55
# description:	The OpenLLDP project aims to provide a comprehensive implementation 
#    		of the IEEE standard 802.1AB Link Layer Discovery Protocol.
# processname:	lldpd
#
# Ilja Bobkevic (ilja.bobkevic@delfi.lt)

# Source function library
. /etc/rc.d/init.d/functions

# Get network config
. /etc/sysconfig/network

# Get service config
[ -f /etc/sysconfig/lldpd ] && . /etc/sysconfig/lldpd

# Check that networking is up.
if is_yes "${NETWORKING}"; then
	if [ ! -f /var/lock/subsys/network -a "$1" != stop -a "$1" != status ]; then
		msg_network_down lldpd
		exit 1
	fi
else
	exit 0
fi

start() {
	# Check if the service is already running?
	if [ ! -f /var/lock/subsys/lldpd ]; then
		msg_starting lldpd
# Default debug switch "n". Default log file /var/log/lldpd.log
# For now force to background. Need to patch code for daemonizing
		lldpd -d ${LLDP_DEBUG:-n} >> "${LLDP_LOG_FILE:-/var/log/lldpd.log}" &
		RETVAL=$?
		[ $RETVAL -eq 0 ] && touch /var/lock/subsys/lldpd
		ok
	else
		msg_already_running lldpd
	fi
}

stop() {
	# Stop daemons.
	if [ -f /var/lock/subsys/lldpd ]; then
		msg_stopping lldpd
		rm -rf /var/lock/subsys/lldpd
# Doesn't generate any pidfile, so just kill'em'all
		killall -9 lldpd
	else
		msg_not_running lldpd
	fi
}

RETVAL=0
# See how we were called.
case "$1" in
  start)
  	start
	;;
  stop)
  	stop
	;;
  status)
	status lldpd
	RETVAL=$?
	;;
  *)
	msg_usage "$0 {start|stop|status}"
	exit 3
	;;
esac

exit $RETVAL
